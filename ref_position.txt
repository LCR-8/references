The position property can take one of four values:

static — an element will be positioned where it naturally occurs in the flow of the document from left to right, top to bottom (the default value).
absolute — an element will be positioned exactly where it is specified in relation to the nearest non-statically positioned element; it is removed from the flow of the web page.
relative — an element will be positioned in relation to where it would have occurred in the flow of the document; it is NOT removed from the flow and space is reserved for it.
fixed — an element will be positioned in the same place in the viewport of the browser (the part of the browser that contains the website being viewed) at all times, even if the user scrolls; it is removed from the flow of the web page.


One way to position an element other than in its default location is to use absolute positioning. Absolute positioning allows you to specify exactly where an element should appear. There are a few important considerations when using absolute positioning.

The first consideration is that when an element's positioning is set to absolute, the element is removed from the flow of the document and no space is reserved for it. The element is essentially floating on top of the rest of the content. This means that all elements that come after it will shift up and/or to the left, depending on the display values for those elements.

The next thing to keep in mind is that when an element’s position is changed to absolute, the element will move to the top left of the nearest container element that is not statically positioned. If no elements on the page have position declarations, the element will move to the top left of the view and move as the user scrolls. If the parent container of an element (such as a div that contains an image) is positioned, the absolutely positioned element (the image) will be positioned relative to the containing element (the div).

It is important to note that absolute positioning overrides the display property and that the box of an absolutely positioned element will wrap closely around the content rather than spanning the page.

<div class="container">
  <img src="#" />
</div>
.container {
  position: relative;
}

img {
  position: absolute;
}
In the example above, all container divs have relative positioning, which will be explained in more detail in Exercise 8. Because container divs are no longer statically positioned, the absolutely positioned image will be located in the top left corner of the .container.



There are 4 values for offsetting position:

top — specifies how far from the top of the non-static parent container the element should be.
left — specifies how far from the left of the non-static parent container the element should be.
right — specifies how far from the right of the non-static parent container the element should be.
bottom — specifies how far from the bottom of the non-static parent container the element should be.



The default positioning of elements is based on the flow of the HTML file.
Inline elements appear next to each other on the same line.
You can position elements to be displayed on their own line using block display.
Inline-block elements are on the same line as each other and their size can be set.
The default positioning for any element is static which means it will appear exactly as it does in the flow of the HTML document.
Elements with absolute positioning are removed from the flow of the document and positioned in relation to the parent element. This positioning will override display properties. An element with absolute positioning will scroll.
Elements with fixed positioning will not scroll as the page scrolls. This removes the element from the flow of the document.
Elements with relative positioning specify the element's distance from where it would have been positioned in the flow of the HTML document.
Non-static elements can be displayed in front or behind another element using the z-index property.